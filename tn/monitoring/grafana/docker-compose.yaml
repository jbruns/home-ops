services:
  grafana:
    # https://hub.docker.com/r/grafana/grafana/tags
    image: grafana/grafana:12.2.1
    container_name: grafana
    user: ${MONITORING_UID}:${MONITORING_GID}
    security_opt:
      - no-new-privileges=true
    restart: unless-stopped
    environment:
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana
      # GF_<SectionName>_<KeyName>
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
      - GF_FEATURE_TOGGLES_ENABLE=lokiLogsDataplane
      - GF_INSTALL_PLUGINS=grafana-polystat-panel,https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    labels:
      stack-back.volumes: true
      stack-back.volumes.include: "grafana_data"
      
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: monitoring

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.grafana-http.rule: Host(`grafana.${DOMAIN}`)
      traefik.http.routers.grafana-http.entrypoints: http
      traefik.http.routers.grafana-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.grafana-https.rule: Host(`grafana.${DOMAIN}`)
      traefik.http.routers.grafana-https.entrypoints: https
      traefik.http.routers.grafana-https.tls: true
      traefik.http.routers.grafana-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.grafana-https.service: grafana
      traefik.http.routers.grafana-https.middlewares: crowdsec-bouncer

      traefik.http.services.grafana.loadbalancer.server.port: 3000

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 80
              - 443
          # reverse proxy
          - network: common_backend
            container: traefik
          # prometheus, loki, alertmanager: data collection
          - network: common_backend
            container: prometheus
          - network: common_backend
            container: loki
          - network: common_backend
            container: alertmanager
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - type: bind
        source: ./provisioning/datasources.yml
        target: /etc/grafana/provisioning/datasources/provisioning-datasources.yaml
        read_only: true
        # Stored encrypted in repo
        x-sops: true
      - ./plugins/app.yaml:/etc/grafana/provisioning/plugins/app.yaml:ro
      - grafana_data:/var/lib/grafana
    networks:
      - backend

volumes:
  grafana_data:
