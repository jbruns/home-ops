services:
  nextcloud:
    # https://hub.docker.com/_/nextcloud
    image: nextcloud:30.0.1
    restart: unless-stopped
    container_name: nextcloud
    environment:
      # https://github.com/nextcloud/Docker/#auto-configuration-via-environment-variables
      # https://github.com/nextcloud/Docker/?tab=readme-ov-file#docker-secrets
      
      # MariaDB configuration
      - MYSQL_HOST=mariadb
      - MYSQL_DATABASE_FILE=/run/secrets/mysql_database
      - MYSQL_USER_FILE=/run/secrets/mysql_user
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}

      # Nextcloud initial credentials and expected domain(s)
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.${ALT_DOMAIN_HOME}
            
      # SMTP settings
      - MAIL_FROM_ADDRESS=${NEXTCLOUD_MAIL_FROM_ADDRESS}
      - MAIL_DOMAIN=${NEXTCLOUD_MAIL_DOMAIN}

      - SMTP_SECURE=${NEXTCLOUD_SMTP_SECURE}
      - SMTP_PORT=${NEXTCLOUD_SMTP_PORT}
      - SMTP_HOST=${NEXTCLOUD_SMTP_HOST}
      - SMTP_NAME=${NEXTCLOUD_SMTP_NAME}
      - SMTP_PASSWORD_FILE=/run/secrets/smtp_password
      
      # Reverse proxy
      - OVERWRITEHOST=nextcloud.${ALT_DOMAIN_HOME}
      - OVERWRITEPROTOCOL=https
      - TRUSTED_PROXIES=${TRAEFIK_BACKEND_IPV4}/32

      # Performance tuning
      - PHP_MEMORY_LIMIT=1G
      - PHP_UPLOAD_LIMIT=6G
      - APACHE_BODY_LIMIT=6442450944
    
    secrets:
      - mysql_database
      - mysql_user
      - mysql_password
      - nextcloud_admin_user
      - nextcloud_admin_password
      - smtp_password

    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: home

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.nextcloud-http.rule: Host(`nextcloud.${ALT_DOMAIN_HOME}`)
      traefik.http.routers.nextcloud-http.entrypoints: http
      traefik.http.routers.nextcloud-http.middlewares: redirect-https

      # Direct all https requests to the service with Nextcloud-specific middleware
      traefik.http.routers.nextcloud-https.rule: Host(`nextcloud.${ALT_DOMAIN_HOME}`)
      traefik.http.routers.nextcloud-https.entrypoints: https
      traefik.http.routers.nextcloud-https.tls: true
      traefik.http.routers.nextcloud-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.nextcloud-https.service: nextcloud
      traefik.http.routers.nextcloud-https.middlewares: nextcloud-chain

      # Middleware for service discovery (https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/reverse_proxy_configuration.html#service-discovery)
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.permanent: true
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.regex: 'https://(.*)/.well-known/(?:card|cal)dav'
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.replacement: 'https://$${1}/remote.php/dav'

      # Middleware for Strict-Transport-Security
      traefik.http.middlewares.nextcloud-hsts.headers.stsSeconds: 15552000
      traefik.http.middlewares.nextcloud-hsts.headers.stsIncludeSubdomains: true

      # Chain all Nextcloud middlewares together
      traefik.http.middlewares.nextcloud-chain.chain.middlewares: crowdsec-bouncer, nextcloud-redirectregex, nextcloud-hsts

      traefik.http.services.nextcloud.loadbalancer.server.port: 80

      # Enable Whalewall for this service
      whalewall.enabled: true
      # nextcloud: communicate with traefik and to WAN over selected protocols.
      whalewall.rules: |
        output:
          - log_prefix: "dns"
            proto: udp
            dst_ports:
              - 53
          - log_prefix: "https"
            proto: tcp
            dst_ports:
              - 443
          - log_prefix: "http"
            proto: tcp
            dst_ports:
              - 80
          # allow communication to traefik
          - network: common_backend
            container: traefik
          # metrics collection
          - network: common_backend
            container: nextcloud-exporter
          # memory cache
          - network: common_backend
            container: redis
          # database
          - network: common_backend
            container: mariadb
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - nextcloud_data:/var/www/html
    networks:
      - backend

  nextcloud-cron:
    image: nextcloud:30.0.1
    container_name: nextcloud-cron
    restart: unless-stopped
    entrypoint: /cron.sh
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: home
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - nextcloud_data:/var/www/html


  nextcloud-exporter:
    # https://github.com/xperimental/nextcloud-exporter
    # https://github.com/xperimental/nextcloud-exporter/pkgs/container/nextcloud-exporter
    image: ghcr.io/xperimental/nextcloud-exporter:0.7.0
    restart: unless-stopped
    # https://github.com/xperimental/nextcloud-exporter#configuration-file
    command:
      - '--config-file /etc/nextcloud-exporter/config.yaml'
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: home

      # Enable Whalewall for this service
      whalewall.enabled: true
      # nextcloud-exporter: communicate with prometheus only
      whalewall.rules: |
        output:
          # metrics collection
          - network: common_backend
            container: prometheus
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - ./nextcloud_exporter_config.yaml:/etc/nextcloud_exporter/config.yaml:ro
    networks:
      - backend

secrets:
  mysql_database:
    file: ./mysql_database.txt
  mysql_user:
    file: ./mysql_user.txt
  mysql_password:
    file: ./mysql_password.txt
  nextcloud_admin_user:
    file: ./nextcloud_admin_user.txt
  nextcloud_admin_password:
    file: ./nextcloud_admin_password.txt
  smtp_password:
    file: ./smtp_password.txt

volumes:
  nextcloud_data:

networks:
  backend:
    name: common_backend
    external: true
