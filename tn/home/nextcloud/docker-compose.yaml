services:
  nextcloud:
    # https://hub.docker.com/_/nextcloud
    image: nextcloud:31.0.8
    container_name: nextcloud
    restart: unless-stopped
    labels:
      stack-back.volumes: true
      stack-back.volumes.include: "nextcloud_data"
      
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: home

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.nextcloud-http.rule: Host(`nextcloud.${ALT_DOMAIN_HOME}`)
      traefik.http.routers.nextcloud-http.entrypoints: http
      traefik.http.routers.nextcloud-http.middlewares: redirect-https

      # Direct all https requests to the service with Nextcloud-specific middleware
      traefik.http.routers.nextcloud-https.rule: Host(`nextcloud.${ALT_DOMAIN_HOME}`)
      traefik.http.routers.nextcloud-https.entrypoints: https
      traefik.http.routers.nextcloud-https.tls: true
      traefik.http.routers.nextcloud-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.nextcloud-https.service: nextcloud
      traefik.http.routers.nextcloud-https.middlewares: nextcloud-chain

      # Middleware for Nextcloud-specific headers
      traefik.http.middlewares.nextcloud-headers.headers.hostsProxyHeaders: X-Forwarded-Host
      traefik.http.middlewares.nextcloud-headers.headers.referrerPolicy: same-origin
      traefik.http.middlewares.nextcloud-headers.headers.stsSeconds: 31536000
      traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.nextcloud-headers.headers.stsPreload: true
      traefik.http.middlewares.nextcloud-headers.headers.contentTypeNosniff: true
      traefik.http.middlewares.nextcloud-headers.headers.customResponseHeaders.X-Robots-Tag: 'noindex,nofollow'


      # Middleware for service discovery (https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/reverse_proxy_configuration.html#service-discovery)
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.permanent: true
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.regex: 'https://(.*)/.well-known/(?:card|cal)dav'
      traefik.http.middlewares.nextcloud-redirectregex.redirectregex.replacement: 'https://$${1}/remote.php/dav'

      # Chain all Nextcloud middlewares together
      traefik.http.middlewares.nextcloud-chain.chain.middlewares: crowdsec-bouncer, nextcloud-headers, nextcloud-redirectregex

      traefik.http.services.nextcloud.loadbalancer.server.port: 80

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 80
              - 443
          # reverse proxy
          - network: common_backend
            container: traefik
          # metrics collection
          - network: common_backend
            container: nextcloud-exporter
          # memory cache
          - network: common_backend
            container: redis
          # database
          - network: common_backend
            container: mariadb
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - nextcloud_data:/var/www/html
      - ./php-limits.ini:/usr/local/etc/php/conf.d/php-limits.ini:ro
    networks:
      - backend

  nextcloud-cron:
    image: nextcloud:31.0.8
    container_name: nextcloud-cron
    restart: unless-stopped
    # solely for Nextcloud cron job
    entrypoint: /cron.sh
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: home

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # memory cache
          - network: common_backend
            container: redis
          # database
          - network: common_backend
            container: mariadb
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - nextcloud_data:/var/www/html
      - ./php-limits.ini:/usr/local/etc/php/conf.d/php-limits.ini:ro
    networks:
      - backend

  nextcloud-exporter:
    # https://github.com/xperimental/nextcloud-exporter
    # https://github.com/xperimental/nextcloud-exporter/pkgs/container/nextcloud-exporter
    image: ghcr.io/xperimental/nextcloud-exporter:0.8.0
    restart: unless-stopped
    container_name: nextcloud-exporter
    user: ${HOME_UID}:${HOME_GID}
    security_opt:
      - no-new-privileges=true
    # https://github.com/xperimental/nextcloud-exporter#configuration-file
    command:
      - '-c /etc/nextcloud-exporter/config.yaml'
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: home

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # metrics collection
          - network: common_backend
            container: nextcloud
          # metrics scrape
          - network: common_backend
            container: prometheus
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - type: bind
        source: ./nextcloud_exporter_config.yaml
        target: /etc/nextcloud-exporter/config.yaml
        read_only: true
        x-sops: true
    networks:
      - backend

volumes:
  nextcloud_data:
