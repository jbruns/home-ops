services:
  sonarr:
    restart: unless-stopped
    # https://github.com/onedr0p/containers/pkgs/container/sonarr
    # https://github.com/Sonarr/Sonarr
    image: ghcr.io/onedr0p/sonarr:4.0.10
    user: ${SONARR_UID}:${MEDIA:GID}
    container_name: sonarr
    environment:
      - TZ=${TZ}
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: media

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.sonarr-http.rule: Host(`sonarr.${DOMAIN}`)
      traefik.http.routers.sonarr-http.entrypoints: http
      traefik.http.routers.sonarr-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.sonarr-https.rule: Host(`sonarr.${DOMAIN}`)
      traefik.http.routers.sonarr-https.entrypoints: https
      traefik.http.routers.sonarr-https.tls: true
      traefik.http.routers.sonarr-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.sonarr-https.service: sonarr
      traefik.http.routers.sonarr-https.middlewares: crowdsec-bouncer

      traefik.http.services.sonarr.loadbalancer.server.port: 8989

      # Enable Whalewall for this service
      whalewall.enabled: true
      # sonarr: Communicate with traefik and to WAN over selected protocols.
      whalewall.rules: |
        output:
          - log_prefix: "dns"
            proto: udp
            dst_ports:
              - 53
          - log_prefix: "https"
            proto: tcp
            dst_ports:
              - 443
          - log_prefix: "http"
            proto: tcp
            dst_ports:
              - 80
          # allow communication to traefik
          - network: common_backend
            container: traefik
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - sonarr_config:/config
      - ${ZFS_POOL_ROOT_HDD}/media:/data
    networks:
      - backend

  sonarr-exporter:
    restart: unless-stopped
    # https://github.com/onedr0p/exportarr
    image: ghcr.io/onedr0p/exportarr:v2.0.1
    container_name: sonarr-exporter
    command: ["sonarr"]
    environment:
      # https://github.com/onedr0p/exportarr#configuration
      - PORT=9707
      - URL="http://sonarr:8989"
      - APIKEY=${SONARR_API_KEY}
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: media
      
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # allow communication to retreive metrics
          - network: common_backend
            container: sonarr
          # allow prometheus to scrape metrics
          - network: common_backend
            container: prometheus
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    networks:
      - backend

volumes:
  sonarr_config:

networks:
  backend:
    name: common_backend
    external: true
