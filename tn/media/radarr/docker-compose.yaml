services:
  radarr:
    # https://github.com/onedr0p/containers/pkgs/container/radarr
    # https://github.com/Radarr/Radarr
    image: ghcr.io/onedr0p/radarr:5.15.1
    user: ${RADARR_UID}:${MEDIA_SHARED_GID}
    security_opt:
      - no-new-privileges=true
    container_name: radarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: media

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.radarr-http.rule: Host(`radarr.${DOMAIN}`)
      traefik.http.routers.radarr-http.entrypoints: http
      traefik.http.routers.radarr-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.radarr-https.rule: Host(`radarr.${DOMAIN}`)
      traefik.http.routers.radarr-https.entrypoints: https
      traefik.http.routers.radarr-https.tls: true
      traefik.http.routers.radarr-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.radarr-https.service: radarr
      traefik.http.routers.radarr-https.middlewares: crowdsec-bouncer

      traefik.http.services.radarr.loadbalancer.server.port: 7878

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 80
              - 443
          # reverse proxy
          - network: common_backend
            container: traefik
          # metrics collection
          - network: common_backend
            container: radarr-exporter
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - radarr_config:/config
      - ${ZFS_POOL_ROOT_HDD}/media:/data
    networks:
      - backend

  radarr-exporter:
    # https://github.com/onedr0p/exportarr
    image: ghcr.io/onedr0p/exportarr:v2.0.1
    container_name: radarr-exporter
    user: ${MEDIA_UID}:${MEDIA_GID}
    security_opt:
      - no-new-privileges=true
    restart: unless-stopped
    command: ["radarr"]
    environment:
      # https://github.com/onedr0p/exportarr#configuration
      - PORT=9708
      - URL=http://radarr:7878
      - APIKEY=${RADARR_API_KEY}
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: media
      
      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # metrics collection
          - network: common_backend
            container: radarr
          # metrics scrape
          - network: common_backend
            container: prometheus
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    networks:
      - backend

volumes:
  radarr_config:
