services:
  traefik:
    image: traefik:v3.2.0
    container_name: traefik
    restart: unless-stopped
    command:
      # Debug-level logging as necessary
      # - --log.level=DEBUG

      # Enable access logs, also read by Crowdsec
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log

      # Enable API for Dashboard
      - --api=true

      # Enable Docker support and only proxy containers that are explicitly declared
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # Entrypoints
      - --entrypoints.https.address=:443
      - --entrypoints.http.address=:80
      - --entrypoints.metrics.address=:8082

      # Let's Encrypt/ACME configuration
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      # Prometheus metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.entryPoint=metrics

      # Enable Crowdsec bouncer plugin - https://plugins.traefik.io/plugins/6335346ca4caa9ddeffda116/crowdsec-bouncer-traefik-plugin
      - --experimental.plugins.crowdsec-bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
      - --experimental.plugins.crowdsec-bouncer.version=v1.3.3
    environment:
      # Provide Cloudflare secret for DNS01 validation
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: common

      # Traefik Dashboard
      traefik.enable: true
      
      # Listen on http, but redirect all requests to https
      traefik.http.routers.traefik-http.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik-http.entrypoints: http
      traefik.http.routers.traefik-http.middlewares: redirect-https
      
      # Direct https requests to internal API, protecting with basic auth and crowdsec
      traefik.http.routers.traefik-https.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik-https.entrypoints: https
      traefik.http.routers.traefik-https.tls: true
      traefik.http.routers.traefik-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.traefik-https.service: api@internal
      traefik.http.routers.traefik-https.middlewares: traefik-dashboard

      traefik.http.middlewares.traefik-auth.basicauth.users: ${TRAEFIK_PASSWORD_HASH}
      traefik.http.middlewares.traefik-dashboard.chain.middlewares: crowdsec-bouncer,traefik-auth

      # Default TLS certificate
      traefik.tls.stores.default.defaultgeneratedcert.resolver: ${CERT_RESOLVER}
      traefik.tls.stores.default.defaultgeneratedcert.domain.main: ${DOMAIN}
      
      # Enable strict SNI checking
      traefik.tls.options.default.sniStrict: true

      # Common middleware configuration
      ## Crowdsec bouncer
      traefik.http.middlewares.crowdsec-bouncer.plugin.crowdsec-bouncer.enabled: true
      ## Debug logging as necessary
      # traefik.http.middlewares.crowdsec-bouncer.plugin.crowdsec-bouncer.loglevel: DEBUG
      traefik.http.middlewares.crowdsec-bouncer.plugin.crowdsec-bouncer.crowdseclapikey: ${TRAEFIK_BOUNCER_API_KEY}

      ## Redirect to HTTPS
      traefik.http.middlewares.redirect-https.redirectScheme.scheme: https

      # Enable Whalewall for this service
      whalewall.enabled: true
      # traefik: allow requests inbound from external addresses. allow outbound dns/http/https.
      whalewall.rules: |
        mapped_ports:
          external:
            allow: true
        output:
          - log_prefix: "dns"
            proto: udp
            dst_ports:
              - 53
          - log_prefix: "https"
            proto: tcp
            dst_ports:
              - 443
          - log_prefix: "http"
            proto: tcp
            dst_ports:
              - 80
          # allow communication to crowdsec
          - network: common_backend
            container: crowdsec
          # metrics collection
          - network: common_backend
            container: prometheus
          # allow communication outbound to downstream services on unpriv ports
          - network: common_backend
            proto: tcp
            dst_ports:
              - 1024-65535
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    ports:
      - 443:443
      - 80:80
    volumes:
      # Access log
      - traefik_log:/var/log/traefik
      # ACME/TLS configuration
      - traefik_le:/letsencrypt
      # Allow Traefik to get updates from the Docker engine
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      proxy:
      backend:
        # Static IP within the backend network, so that we can constrain trusted proxies for other services
        ipv4_address: ${TRAEFIK_BACKEND_IPV4}

volumes:
  traefik_log:
  traefik_le:
