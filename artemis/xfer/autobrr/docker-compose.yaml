services:
  autobrr:
    # https://github.com/autobrr/autobrr/pkgs/container/autobrr
    image: ghcr.io/autobrr/autobrr:v1.48
    user: ${XFER_UID}:${XFER_GID}
    security_opt:
      - no-new-privileges=true
    container_name: autobrr
    restart: unless-stopped
    environment:
      # https://autobrr.com/installation/docker#environment-variables
      - TZ=${TZ}
    labels:
      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.autobrr-http.rule: Host(`autobrr.${DOMAIN}`)
      traefik.http.routers.autobrr-http.entrypoints: http
      traefik.http.routers.autobrr-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.autobrr-https.rule: Host(`autobrr.${DOMAIN}`)
      traefik.http.routers.autobrr-https.entrypoints: https
      traefik.http.routers.autobrr-https.tls: true
      traefik.http.routers.autobrr-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.autobrr-https.service: autobrr
      traefik.http.routers.autobrr-https.middlewares: crowdsec-bouncer

      traefik.http.services.autobrr.loadbalancer.server.port: 7474

      # Enable Whalewall for this service
      whalewall.enabled: true
      # autobrr: Communicate with traefik, deluge and to WAN over selected protocols.
      whalewall.rules: |
        output:
          - log_prefix: "dns"
            proto: udp
            dst_ports:
              - 53
          - log_prefix: "https"
            proto: tcp
            dst_ports:
              - 443
          - log_prefix: "http"
            proto: tcp
            dst_ports:
              - 80
          - log_prefix: "irc"
            proto: tcp
            dst_ports:
              - 6660-7000
          # allow communication to traefik
          - network: common_backend
            container: traefik
          # deluge management
          - network: common_backend
            container: deluge
    volumes:
      - autobrr_config:/config
    networks:
      - backend

volumes:
  autobrr_config:
