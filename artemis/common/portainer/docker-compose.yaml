services:
  portainer:
    image: portainer/portainer-ee:2.27.4
    container_name: portainer
    user: ${COMMON_UID}:${COMMON_GID}
    group_add:
      - ${DOCKER_GID}
    security_opt:
      - no-new-privileges=true
    restart: unless-stopped
    environment:
      - COMPOSE_UNPACKER_IMAGE=jbruns/compose-unpacker:2.21.3-sops
    labels:
      logging: promtail
      logging_jobname: containerlogs
      stackname: common

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.portainer-http.rule: Host(`pio.${DOMAIN}`)
      traefik.http.routers.portainer-http.entrypoints: http
      traefik.http.routers.portainer-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.portainer-https.rule: Host(`pio.${DOMAIN}`)
      traefik.http.routers.portainer-https.entrypoints: https
      traefik.http.routers.portainer-https.tls: true
      traefik.http.routers.portainer-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.portainer-https.service: portainer
      traefik.http.routers.portainer-https.middlewares: crowdsec-bouncer

      traefik.http.services.portainer.loadbalancer.server.port: 9000

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 443
              - 80
          # reverse proxy
          - network: common_backend
            container: traefik
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - backend

volumes:
  portainer_data:
